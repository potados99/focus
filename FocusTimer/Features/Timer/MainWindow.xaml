<local:MainViewModelWindow x:Class="FocusTimer.Features.Timer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FocusTimer.Features.Timer"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding"
        xmlns:slot="clr-namespace:FocusTimer.Features.Timer.Slot"
        xmlns:resources="clr-namespace:FocusTimer.Resources"
        d:DataContext="{d:DesignInstance Type=local:MainViewModel}"
        mc:Ignorable="d"
        Topmost="True"
        WindowStyle="None"
        WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize"
        Background="{x:Null}"
        AllowsTransparency="True"
        Title="Focus"
        Closed="Window_Closed"
        KeyDown="Window_KeyDown"
        Height="{Binding Path=WindowHeight, FallbackValue=200, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
        ShowInTaskbar="True"
        Width="230">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        <Storyboard x:Key="ShakeHorizontalAnimation"
                    Storyboard.TargetName="LockImage">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin"
                                              BeginTime="00:00:00">
                <SplineThicknessKeyFrame KeyTime="00:00:00"
                                         Value="-4,0,0,0" />
                <SplineThicknessKeyFrame KeyTime="00:00:00.1"
                                         Value="4,0,0,0" />
                <SplineThicknessKeyFrame KeyTime="00:00:00.2"
                                         Value="0,0,0,0" />
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="LockingAnimation"
                    Storyboard.TargetName="LockImage">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin"
                                              BeginTime="00:00:00">
                <SplineThicknessKeyFrame KeyTime="00:00:00"
                                         Value="0,4,0,0" />
                <SplineThicknessKeyFrame KeyTime="00:00:00.1"
                                         Value="0,0,0,0" />
                <SplineThicknessKeyFrame KeyTime="00:00:00.2"
                                         Value="0,0,0,0" />
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="UnlockingAnimation"
                    Storyboard.TargetName="LockImage">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin"
                                              BeginTime="00:00:00">
                <SplineThicknessKeyFrame KeyTime="00:00:00"
                                         Value="0,-4,0,0" />
                <SplineThicknessKeyFrame KeyTime="00:00:00.1"
                                         Value="0,0,0,0" />
                <SplineThicknessKeyFrame KeyTime="00:00:00.2"
                                         Value="0,0,0,0" />
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>

    <Window.ContextMenu>
        <ContextMenu Style="{StaticResource ModernMenu}">

            <MenuItem Style="{StaticResource ModernMenuItem}"
                      x:Name="ExitItem"
                      Header="{x:Static resources:strings.exit}"
                      Click="ExitItem_Click"
                      IsEnabled="{c:Binding Path=!IsFocusLockHold}">
                <MenuItem.Icon>
                    <Image Source="{StaticResource ic_exit_to_app}" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Style="{StaticResource ModernMenuItem}"
                      x:Name="ResetItem"
                      Header="{x:Static resources:strings.reset}"
                      Click="ResetItem_Click">
                <MenuItem.Icon>
                    <Image Source="{StaticResource ic_refresh}" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Style="{StaticResource ModernMenuItem}"
                      x:Name="ChartItem"
                      Header="{x:Static resources:strings.dashboard}"
                      Click="ChartItem_Click">
                <MenuItem.Icon>
                    <Image Source="{StaticResource ic_chart_bar}" />
                </MenuItem.Icon>
            </MenuItem>

            <Separator Style="{StaticResource ModernMenuSeparator}" />
            
            <MenuItem Style="{StaticResource ModernMenuItem}"
                      x:Name="LanguageItem">
                <MenuItem.Icon>
                    <Image Source="{StaticResource ic_web}" />
                </MenuItem.Icon>
                <MenuItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock VerticalAlignment="Center" Text="{x:Static resources:strings.language}"></TextBlock>
                        <ComboBox x:Name="Language"
                                  ItemsSource="{Binding SupportedCultures}"
                                  SelectedItem="{Binding SelectedCulture, Mode=TwoWay}"
                                  Margin="5,0">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding NativeName}"></TextBlock>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </StackPanel>
                </MenuItem.Header>
                
            </MenuItem>
            <MenuItem Style="{StaticResource ModernMenuItem}">
                <MenuItem.Icon>
                    <Image Source="{StaticResource ic_timer_lock_outline}" />
                </MenuItem.Icon>
                <MenuItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock VerticalAlignment="Center" Text="{x:Static resources:strings.hold_focus_lock_for}"></TextBlock>
                        <xctk:IntegerUpDown AutoSelectBehavior="Never"
                                            AllowTextInput="True"
                                            MouseWheelActiveTrigger="MouseOver"
                                            Value="{Binding FocusLockHoldDuration, Mode=TwoWay}"
                                            Minimum="1"
                                            Maximum="9999"
                                            Width="50"
                                            Foreground="{StaticResource Text.Primary.Foreground}"
                                            Background="Transparent"
                                            Margin="5,0" />
                        <TextBlock VerticalAlignment="Center" Text="{x:Static resources:strings.minutes}"></TextBlock>
                    </StackPanel>
                </MenuItem.Header>
            </MenuItem>
            <MenuItem Style="{StaticResource ModernMenuItem}">
                <MenuItem.Icon>
                    <Image Source="{StaticResource ic_mouse_move_vertical}" />
                </MenuItem.Icon>
                <MenuItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock VerticalAlignment="Center" Text="{x:Static resources:strings.pause_timer_after}"></TextBlock>
                        <xctk:IntegerUpDown AutoSelectBehavior="Never"
                                            AllowTextInput="True"
                                            MouseWheelActiveTrigger="MouseOver"
                                            Value="{Binding ActivityTimeout, Mode=TwoWay}"
                                            Minimum="0"
                                            Maximum="9999"
                                            Width="50"
                                            Foreground="{StaticResource Text.Primary.Foreground}"
                                            Background="Transparent"
                                            Margin="5,0" />
                        <TextBlock VerticalAlignment="Center" Text="{x:Static resources:strings.seconds}"></TextBlock>
                    </StackPanel>
                </MenuItem.Header>
            </MenuItem>
            
            <Separator Style="{StaticResource ModernMenuSeparator}" />

            <MenuItem Style="{StaticResource ModernMenuItem}"
                      x:Name="InfoItem"
                      Header="{x:Static resources:strings.about}"
                      Click="InfoItem_Click">
                <MenuItem.Icon>
                    <Image Source="{StaticResource ic_information_outline}" />
                </MenuItem.Icon>
            </MenuItem>

        </ContextMenu>
    </Window.ContextMenu>

    <Border CornerRadius="6,6,6,6"
            Background="{StaticResource Window.Border.Brush}">
        <Border BorderThickness="1"
                CornerRadius="6,6,6,6"
                Background="{StaticResource Window.Background}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="{Binding FixedPartLength, FallbackValue=1.4*}" />
                    <RowDefinition Height="{Binding ExpandablePartLength, FallbackValue=5*}" />
                </Grid.RowDefinitions>

                <!-- 항상 보이는 영역 -->
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1.5*" />
                        <ColumnDefinition Width="6*" />
                        <ColumnDefinition Width="1.5*" />
                    </Grid.ColumnDefinitions>

                    <Button Grid.Column="0"
                            Background="Transparent"
                            Style="{StaticResource HoverOpacityEffect}"
                            Click="Lock_Click"
                            ToolTip="{Binding LockButtonToolTip}">
                        <Button.ContextMenu>
                            <ContextMenu Style="{StaticResource ModernMenu}"
                                         Visibility="{c:Binding !IsFocusLocked, FalseToVisibility=Hidden}">
                                <MenuItem Style="{StaticResource ModernMenuItem}"
                                          x:Name="StartFocusLockItem"
                                          Header="{Binding StartFocusLockItemLabel}"
                                          Click="StartFocusLockItem_Click">
                                    <MenuItem.Icon>
                                        <Image Source="{StaticResource ic_timer_lock}" />
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </Button.ContextMenu>
                        
                        <Image x:Name="LockImage"
                               Source="{Binding LockImage, FallbackValue={StaticResource ic_lock}}"
                               Width="16"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center" />
                    </Button>
                    <Label Grid.Column="1"
                           Content="{Binding TimerItem.ActiveElapsedString, FallbackValue=06:36:12}"
                           Style="{StaticResource BigTimerLabel}"
                           IsEnabled="{Binding TimerItem.IsAnyAppActive}"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center" />

                    <Grid Grid.Column="2"
                          HorizontalAlignment="Left">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Grid.ContextMenu>
                            <ContextMenu ItemsSource="{Binding ConcentrationContextMenu}">
                                <ContextMenu.Style>
                                    <Style TargetType="ContextMenu"
                                           BasedOn="{StaticResource ModernMenu}">
                                        <Setter Property="ItemContainerStyle">
                                            <Setter.Value>
                                                <Style TargetType="MenuItem"
                                                       BasedOn="{StaticResource ModernMenuItem}">
                                                    <Setter Property="IsCheckable"
                                                            Value="{Binding Path=IsCheckable}" />
                                                    <Setter Property="IsChecked"
                                                            Value="{Binding Path=IsChecked, Mode=TwoWay}" />
                                                    <Setter Property="Icon"
                                                            Value="{Binding Path=Icon}" />
                                                    <Setter Property="Header"
                                                            Value="{Binding Path=Header}" />
                                                    <Setter Property="ItemsSource"
                                                            Value="{Binding Path=Children}" />
                                                </Style>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>

                                </ContextMenu.Style>
                            </ContextMenu>
                        </Grid.ContextMenu>

                        <Label Grid.Row="0"
                               Opacity="{Binding ShowConcentrationOpacity}"
                               Visibility="{Binding ShowConcentrationOpacity}"
                               Content="{x:Static resources:strings.concentration}"
                               Style="{StaticResource WhiteTextLabel}"
                               VerticalAlignment="Bottom"
                               HorizontalAlignment="Center" />
                        <Label Grid.Row="1"
                               Opacity="{Binding ShowConcentrationOpacity}"
                               Content="{Binding Concentration, FallbackValue=92%}"
                               Style="{StaticResource ConcentrationLabel}"
                               IsEnabled="{Binding IsOnConcentration}"
                               VerticalAlignment="Top"
                               HorizontalAlignment="Center" />
                    </Grid>

                </Grid>

                <!-- 확대되었을 때에(expanded) 보이는 영역 -->
                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Separator Grid.Row="0"
                               Background="{StaticResource Separator.Background}"
                               Margin="0" />

                    <Grid Grid.Row="1"
                          Margin="0, 4, 0, 4">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*" />
                            <RowDefinition Height="1*" />
                            <RowDefinition Height="1*" />
                            <RowDefinition Height="1*" />
                            <RowDefinition Height="1*" />
                        </Grid.RowDefinitions>

                        <slot:TimerSlotControl Grid.Row="0"
                                         DataContext="{Binding TimerSlots[0]}" />
                        <slot:TimerSlotControl Grid.Row="1"
                                         DataContext="{Binding TimerSlots[1]}" />
                        <slot:TimerSlotControl Grid.Row="2"
                                         DataContext="{Binding TimerSlots[2]}" />
                        <slot:TimerSlotControl Grid.Row="3"
                                         DataContext="{Binding TimerSlots[3]}" />
                        <slot:TimerSlotControl Grid.Row="4"
                                         DataContext="{Binding TimerSlots[4]}" />
                    </Grid>
                </Grid>
            </Grid>
        </Border>
    </Border>
</local:MainViewModelWindow>
